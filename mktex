#!/bin/bash
clear
###################################################################################
# Source: https://github.com/tmlarsson/mktex
###################################################################################

# Initial setup
BIBER=False
CLEAN=False
MINTED= # -shell-escape only needs to be used when minted is used due to potentially security flaw.
compiler="pdflatex"

# Check for input
if [ "$#" == 0 ]; then
    echo "No input..."
    exit 1
fi

while [[ $# > 0 ]]
do
key="$1"
case $key in
    -b|--biber)
    BIBER=true
    ;;
    -c|--clean)
    CLEAN=true
    ;;
    -h|--help)
    HELP=true
    ;;
    -m|--minted)
    MINTED="-shell-escape"
    ;;
    -o|--open)
    OPEN=true
    ;;
    --tikz)
    TIKZ=true
    ;;
    -std=lua)
    compiler="lualatex"
    ;;
    --update)
    update=true
    ;;
    *)
    TEMP="$1"
    if [[ $TEMP =~ ".tex" ]]; then
        TEMP=${TEMP%.tex}
    fi
    if [[ "$TEMP" =~ "." ]]; then
        TEMP=${TEMP%.}
    fi
    if [ ! -f "$TEMP.tex" ]; then
        echo "No such file exists"
        exit 1  
    fi

    FILENAME="$TEMP"
    ;;
esac
shift # go to next argument or value
done


if [ "$HELP" == true ]; then
    echo "mktex - Compiles LaTeX documents with pdfLaTeX"
    echo " "
    echo "Usage example: [possible flags]"
    echo "mktex filename [-b -c -m]"
    echo " "
    echo "options:"
    echo "-h, --help            show brief help"
    echo "-b, --biber           compile using biber"
    echo "-c, --clean           remove unnecessary files"
    echo "-m, --minted          Use this flag to use minted"
    echo "--tikz                Compile only TikZ picures in standalone mode"
    echo "-std=lua              Changes the default compiler to lualatex"
    exit 0
fi

# update mktex
if [ ! -z $update ]; then
    cd /tmp
    touch tmpupdate.sh
    echo "#!/bin/bash" > tmpupdate.sh
    #echo "cd" >> tmpupdate.sh
    echo "git clone https://github.com/tmlarsson/mktex" >> tmpupdate.sh
    echo "cd mktex && mv mktex /usr/local/bin" >> tmpupdate.sh
    echo "cd ../ && rm -rf mktex" >> tmpupdate.sh
    echo "chmod +x /usr/local/bin/mktex" >> tmpupdate.sh
    chmod +x tmpupdate.sh
    ./tmpupdate.sh
    rm tmpupdate.sh
    exit 0
fi

# Check if no filename is specified.
# If no filename is given then exit the program
if [ -z $FILENAME ]; then
    echo "No filename was specified..."
    exit 0
fi

# If one only wants to compile a tikz picure
# That code is exectued below
# If in TikZ mode the regular code for compiling a 
# document will be skipped
if [ "$TIKZ" == true ]; then
    echo -n "Compiling TikZ picure using $compiler..."

    tikzresult=$(max_print_line=2048 $compiler $MINTED -interaction=nonstopmode -file-line-error "${FILENAME%.tex}" | grep -i "^.*:[0-9]*:.*\|warning.*$")

    if [ -z "$tikzresult" ]; then
        echo "[OK]"
    else
        echo ""
        echo ""
        echo "Found some errors..."
        echo ""
        echo $tikzresult
    fi    
fi


# Compile document only if not in TIKZ mode
if [ -z "$TIKZ" ]; then

# Just adds some visual niceness
if [ "$BIBER" == true ]; then
    echo "Compile using $compiler and biber..."
else
    echo "Compile using $compiler..."
fi

# First sweep of the compilation. I have chosen to compile
# twice due to the fact that references takes two sweeps to
# fully update. Due to that fact, the output of the first
# sweep will be neglected since this usually contain errors
# not present in the second sweep.
echo -n "$compiler: First sweep..."
$compiler $MINTED -interaction=nonstopmode -file-line-error "${FILENAME%.tex}" >/dev/null
echo "[OK]"

# If one uses biber for references one also has to compile 
# with biber. One bug, at least on OS X happens sometimes
# where the chache has to be removed for the program to 
# compile. This take care of that automatically.
if [ "$BIBER" == true ]; then
    runAgain=true
    while [ "$runAgain" == true ]; do
        echo -n "biber..."
        bibRES=$(biber "$FILENAME" 2>/tmp/biber)
        bibERR=$(</tmp/biber)
        echo "[OK]"

        # Check fo data bug in biber
        vartest=$(echo "$bibERR" | grep "no data found")
        if [ ! -z "$vartest" ]; then
            rm -rf `biber --cache`
            echo ""
            echo "Removed biber cache..."
            echo "Compiling again..."
            runAgain=true
        else
            runAgain=false
        fi
    done
fi

# Second sweep with the given compiler
echo -n "$compiler: Second sweep..."

result=$(max_print_line=2048 $compiler $MINTED -interaction=nonstopmode -file-line-error "${FILENAME%.tex}" | grep -i "^.*:[0-9]*:.*\|warning.*$") 
echo "[OK]"

# Prints the result, if there is any errors to display.
if [ -z "$result" ]; then
    echo 'Compiled without errors!'
else
    echo "Compiled with errors in $compiler..."
    echo""
    echo "$result"
fi

if [ $BIBER == true ]; then
if [ -z "$bibRES" ]; then
    echo ""
    echo 'Compiled without errors in biber!'
else
    echo ""
    echo "Compiled with errors in biber..."
    echo""
    echo "$bibRES"
    echo ""
    echo "$bibERR"
fi
fi
fi
# Remove unnessesary files.
if [ "$CLEAN" == true ]; then
    if [ -f "${FILENAME}.log" ]; then
        rm *.log
    fi
    if [ -f "${FILENAME}.lof" ]; then
        rm *.lof
    fi
    if [ -f "${FILENAME}.blg" ]; then
        rm *.blg
    fi
    if [ -f "${FILENAME}.toc" ]; then
        rm *.toc
    fi
    if [ -f "${FILENAME}.out" ]; then
        rm *.out
    fi

    if [ -f "${FILENAME}.bbl" ]; then
        rm *.bbl
    fi
    if [ -f "${FILENAME}.aux" ]; then
        rm *.aux
    fi
    if [ -f "${FILENAME}.bcf" ]; then
        rm *.bcf
    fi
    if [ -f "${FILENAME}.run.xml" ]; then
        rm *.run.xml
    fi
    if [ -f "${FILENAME}.tex.bak" ]; then
        rm *.tex.bak
    fi
    if [ -f "${FILENAME}.fls" ]; then
        rm *.fls
    fi
    if [ -f "${FILENAME}.fdb_latexmk" ]; then
        rm *.fdb_latexmk
    fi
fi

# Opens the file if the -o flag was specified
if [ "$OPEN" == true ]; then
    if [[ "$OSTYPE" == "linux-gnu" ]]; then
        xdg-open "${FILENAME}.pdf"
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        open "${FILENAME}.pdf"
    fi
fi
